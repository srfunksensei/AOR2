/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CPU_blok_operacije_prvi.java
 *
 * Created on 22.09.2010., 10.18.30
 */

package rs.etf.aor.gui;

import java.awt.Graphics;
import java.awt.Point;
import javax.swing.JPanel;
import rs.etf.aor.components.*;

/**
 *
 * @author MB
 */
public class CPU_blok_operacije_prvi extends javax.swing.JPanel implements PanelsInfo{

    private JPanel parent;
    private String parentTitle = "CPU_organizacija_main";

    //components
    Register x, y;
    private ALU alu;
    private TripleStateBuffer buff1;

    //lines
    Line lines[];

    //dots
    private Junction dot1;

    //bus
    Bus sbus, dbus;


    /** Creates new form CPU_blok_operacije_prvi */
    public CPU_blok_operacije_prvi(JPanel parent) {
        this.parent = parent;
        initComponents();
        initPictureComponents();
        initLines();
        initBus();
        connectComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/etf/aor/images/CPU_blok_operacije_prvi.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private void initBus() {

        sbus = new Bus(16);
        dbus = new Bus(16);

        sbus.addPoint(new Point(51, 101));
        sbus.addPoint(new Point(563, 101));
        sbus.addPoint(new Point(74, 101));
        sbus.addPoint(new Point(74, 290));
        sbus.addPoint(new Point(74, 290));
        sbus.addPoint(new Point(92, 290));
        sbus.addPoint(new Point(206, 101));
        sbus.addPoint(new Point(206, 262));
        sbus.addPoint(new Point(206, 262));
        sbus.addPoint(new Point(226, 262));

        dbus.addPoint(new Point(52, 73));
        dbus.addPoint(new Point(563, 73));
        dbus.addPoint(new Point(478, 73));
        dbus.addPoint(new Point(478, 154));

        dbus.addTextPoint(new Point(80, 70));
        sbus.addTextPoint(new Point(80, 95));


    }

    public String getParentTitle() {
        return parentTitle;
    }

    private void initLines() {
        lines = new Line[41];
        for(int i = 0; i<lines.length; i++){
            lines[i] = new Line(null, 0, 0, 1);
        }

        //ldX
        lines[0].addPoint(new Point(121, 203));
        lines[0].addPoint(new Point(121, 214));

        //ldY
        lines[1].addPoint(new Point(255, 175));
        lines[1].addPoint(new Point(255, 186));

        //trans
        lines[2].addPoint(new Point(347, 365));
        lines[2].addPoint(new Point(347, 377));

        //add
        lines[3].addPoint(new Point(360, 365));
        lines[3].addPoint(new Point(360, 377));

        //inc
        lines[4].addPoint(new Point(371, 365));
        lines[4].addPoint(new Point(371, 377));

        //dec
        lines[5].addPoint(new Point(383, 365));
        lines[5].addPoint(new Point(383, 377));

        //and
        lines[6].addPoint(new Point(394, 365));
        lines[6].addPoint(new Point(394, 377));

        //asr
        lines[7].addPoint(new Point(406, 365));
        lines[7].addPoint(new Point(406, 377));

        //sl
        lines[8].addPoint(new Point(417, 365));
        lines[8].addPoint(new Point(417, 377));

        //MOVS
        lines[9].addPoint(new Point(504, 366));
        lines[9].addPoint(new Point(504, 377));

        //POP
        lines[10].addPoint(new Point(543, 366));
        lines[10].addPoint(new Point(543, 377));

        //y15
        lines[11].addPoint(new Point(453, 271));
        lines[11].addPoint(new Point(496, 271));

        //x0
        lines[12].addPoint(new Point(453, 290));
        lines[12].addPoint(new Point(496, 290));

        //x15
        lines[13].addPoint(new Point(453, 308));
        lines[13].addPoint(new Point(496, 308));

        //alu16
        lines[14].addPoint(new Point(429, 328));
        lines[14].addPoint(new Point(496, 328));

        //V
        lines[15].addPoint(new Point(549, 245));
        lines[15].addPoint(new Point(563, 245));

        //C
        lines[16].addPoint(new Point(549, 275));
        lines[16].addPoint(new Point(563, 275));

        //Z
        lines[17].addPoint(new Point(549, 305));
        lines[17].addPoint(new Point(563, 305));

        //N
        lines[18].addPoint(new Point(549, 335));
        lines[18].addPoint(new Point(563, 335));

        //ALUout on triple buff
        lines[19].addPoint(new Point(483, 165));
        lines[19].addPoint(new Point(491, 165));

        //xout
        lines[20].addPoint(new Point(129, 290));
        lines[20].addPoint(new Point(148, 290));
        lines[20].addPoint(new Point(148, 385));
        lines[20].addPoint(new Point(281, 385));
        lines[20].addPoint(new Point(281, 318));
        lines[20].addPoint(new Point(337, 318));
        lines[20].setThikness(16);

        //yout
        lines[21].addPoint(new Point(264, 261));
        lines[21].addPoint(new Point(337, 261));
        lines[21].setThikness(16);

        //aluout
        lines[22].addPoint(new Point(428, 252));
        lines[22].addPoint(new Point(478, 252));
        lines[22].setThikness(16);
        lines[22].addTextPoint(new Point (20, 20));

        //aluout1 from dot1
        lines[23].addPoint(new Point(478, 252));
        lines[23].addPoint(new Point(495, 252));
        lines[23].setThikness(16);

        //aluout2 from dot1
        lines[24].addPoint(new Point(478, 252));
        lines[24].addPoint(new Point(478, 177));
        lines[24].setThikness(16);

    }

    private void initPictureComponents() {
        x = new Register(2);
        y = new Register(3);
        alu = new ALU();
        buff1 = new TripleStateBuffer();
        dot1 = new Junction(2);
    }

    private void connectComponents() {
        lines[0].setNextComp(x);
        lines[0].setNextCompPort(1);

        lines[1].setNextComp(y);
        lines[1].setNextCompPort(1);

        lines[2].setNextComp(alu);
        lines[2].setNextCompPort(2);

        lines[3].setNextComp(alu);
        lines[3].setNextCompPort(6);

        lines[4].setNextComp(alu);
        lines[4].setNextCompPort(7);

        lines[5].setNextComp(alu);
        lines[5].setNextCompPort(8);

        lines[6].setNextComp(alu);
        lines[6].setNextCompPort(5);

        lines[7].setNextComp(alu);
        lines[7].setNextCompPort(4);

        lines[8].setNextComp(alu);
        lines[8].setNextCompPort(3);

        y.setLine(lines[11], 2);
        x.setLine(lines[12], 1);
        x.setLine(lines[13], 2);
        alu.setLine(lines[14], 1);

        lines[19].setNextComp(buff1);
        lines[19].setNextCompPort(1);

        x.setLine(lines[20], 0);
        lines[20].setNextComp(alu);
        lines[20].setNextCompPort(0);

        y.setLine(lines[21], 0);
        lines[21].setNextComp(alu);
        lines[21].setNextCompPort(1);

        alu.setLine(lines[22], 0);
        lines[22].setNextComp(dot1);

        dot1.setLine(lines[23], 0);
        dot1.setLine(lines[24], 1);

        lines[24].setNextComp(buff1);
        lines[24].setNextCompPort(0);

        sbus.addNextComponent(x, 0);
        sbus.addNextComponent(y, 0);

        buff1.setLine(dbus, 0);

        //alu0 to alu15
        for (int i=0; i<16; i++) {
            alu.setLine(lines[25+i], 2+i);
        }

    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        for (int i = 0; i < lines.length; i++) {
            lines[i].paint(g);
        }
        sbus.paint(g);
        dbus.paint(g);
    }

    public void refreshSequential() {
        x.refreshSequential();
        y.refreshSequential();
    }

    public void clock() {
       x.clock();
       y.clock();
    }

    public void clear() {
        x.setState(0);
        y.setState(0);
    }

}
