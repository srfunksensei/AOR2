/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CPU_organizacija_main.java
 *
 * Created on 22.09.2010., 10.27.00
 */

package rs.etf.aor.gui;

import java.awt.Graphics;
import java.awt.Point;
import javax.swing.JPanel;
import rs.etf.aor.components.Bus;
import rs.etf.aor.components.Junction;
import rs.etf.aor.components.Line;
import rs.etf.aor.components.TripleStateBuffer;

/**
 *
 * @author MB
 */
public class CPU_organizacija_main extends javax.swing.JPanel implements PanelsInfo{

    private JPanel parent;
    private String parentTitle = "System_main";

    //components
    private TripleStateBuffer buff1, buff2;

    //lines
    Line lines[];

    //dots
    private Junction dot1, dot2, dot3, dot4, dot5, dot6,
            dot7, dot8, dot9;

    //bus
    Bus systemABUS, systemDBUS, dbus, sbus;

    /** Creates new form CPU_organizacija_main */
    public CPU_organizacija_main(JPanel parent) {
        this.parent = parent;
        initComponents();
        initPictureComponents();
        initLines();
        initBuses();
        connectComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rs/etf/aor/images/CPU_organizacija_main.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    public String getParentTitle() {
        return parentTitle;
    }

    private void initBuses() {

        systemDBUS = new Bus(8);
        systemABUS = new Bus(16);
        dbus = new Bus(16);
        sbus = new Bus(16);

        //vertical system DBUS
        systemDBUS.addPoint(new Point(484, 81));
        systemDBUS.addPoint(new Point(484, 224));

        //horizontal system DBUS
        systemDBUS.addPoint(new Point(447, 192));
        systemDBUS.addPoint(new Point(484, 192));

        //vertical system ABUS
        systemABUS.addPoint(new Point(533, 81));
        systemABUS.addPoint(new Point(533, 224));

        //horizontal system ABUS
        systemABUS.addPoint(new Point(447, 177));
        systemABUS.addPoint(new Point(533, 177));

        //vertical sbus
        sbus.addPoint(new Point(250, 116));
        sbus.addPoint(new Point(250, 306));

        //vertical dbus
        dbus.addPoint(new Point(302, 116));
        dbus.addPoint(new Point(302, 306));

        //horizontal sbus
        sbus.addPoint(new Point(232, 151));
        sbus.addPoint(new Point(315, 151));
        sbus.addPoint(new Point(231, 290));
        sbus.addPoint(new Point(315, 290));
        sbus.addPoint(new Point(250, 195));
        sbus.addPoint(new Point(265, 195));
        sbus.addPoint(new Point(250, 218));
        sbus.addPoint(new Point(261, 218));

        //horizontal dbus
        dbus.addPoint(new Point(232, 135));
        dbus.addPoint(new Point(315, 135));
        dbus.addPoint(new Point(232, 275));
        dbus.addPoint(new Point(315, 275));
        dbus.addPoint(new Point(290, 195));
        dbus.addPoint(new Point(302, 195));
        dbus.addPoint(new Point(284, 218));
        dbus.addPoint(new Point(302, 218));

        //points for textual representation of bus value
        systemABUS.addTextPoint(new Point(536, 90));
        systemDBUS.addTextPoint(new Point(487, 90));
        sbus.addTextPoint(new Point(245, 111));
        dbus.addTextPoint(new Point(298, 111));

        initArrows();

    }

    private void initArrows() {

        systemDBUS.addPoint(new Point(447, 192));
        systemDBUS.addPoint(new Point(458, 185));
        systemDBUS.addPoint(new Point(447, 191));
        systemDBUS.addPoint(new Point(458, 184));
        systemDBUS.addPoint(new Point(447, 193));
        systemDBUS.addPoint(new Point(458, 186));

        systemDBUS.addPoint(new Point(447, 192));
        systemDBUS.addPoint(new Point(458, 199));
        systemDBUS.addPoint(new Point(447, 191));
        systemDBUS.addPoint(new Point(458, 198));
        systemDBUS.addPoint(new Point(447, 193));
        systemDBUS.addPoint(new Point(458, 200));

        systemDBUS.addPoint(new Point(483, 192));
        systemDBUS.addPoint(new Point(472, 199));
        systemDBUS.addPoint(new Point(483, 191));
        systemDBUS.addPoint(new Point(472, 198));
        systemDBUS.addPoint(new Point(483, 193));
        systemDBUS.addPoint(new Point(472, 200));

        systemDBUS.addPoint(new Point(483, 192));
        systemDBUS.addPoint(new Point(472, 185));
        systemDBUS.addPoint(new Point(483, 191));
        systemDBUS.addPoint(new Point(472, 184));
        systemDBUS.addPoint(new Point(483, 193));
        systemDBUS.addPoint(new Point(472, 186));

        systemABUS.addPoint(new Point(532, 176));
        systemABUS.addPoint(new Point(521, 169));
        systemABUS.addPoint(new Point(532, 175));
        systemABUS.addPoint(new Point(521, 168));
        systemABUS.addPoint(new Point(532, 177));
        systemABUS.addPoint(new Point(521, 170));

        systemABUS.addPoint(new Point(532, 176));
        systemABUS.addPoint(new Point(521, 184));
        systemABUS.addPoint(new Point(532, 175));
        systemABUS.addPoint(new Point(521, 183));
        systemABUS.addPoint(new Point(532, 177));
        systemABUS.addPoint(new Point(521, 185));

    }

    private void initLines() {
        lines = new Line[30];
        for(int i = 0; i<lines.length; i++){
            lines[i] = new Line(null, 0, 0, 1);
        }

        //SDout
        lines[0].addPoint(new Point(277, 184));
        lines[0].addPoint(new Point(277, 191));

        //DSout
        lines[1].addPoint(new Point(271, 223));
        lines[1].addPoint(new Point(271, 230));

        //intr1
        lines[2].addPoint(new Point(484, 239));
        lines[2].addPoint(new Point(446, 239));

        //< intr1
        lines[3].addPoint(new Point(453, 234));
        lines[3].addPoint(new Point(446, 239));
        lines[3].addPoint(new Point(453, 243));

        //intr2
        lines[4].addPoint(new Point(484, 255));
        lines[4].addPoint(new Point(446, 255));

        //< intr2
        lines[5].addPoint(new Point(453, 251));
        lines[5].addPoint(new Point(446, 255));
        lines[5].addPoint(new Point(453, 259));

        //intr3
        lines[6].addPoint(new Point(484, 270));
        lines[6].addPoint(new Point(446, 270));

        //< intr3
        lines[7].addPoint(new Point(453, 266));
        lines[7].addPoint(new Point(446, 270));
        lines[7].addPoint(new Point(453, 274));

        //inta1
        lines[8].addPoint(new Point(484, 282));
        lines[8].addPoint(new Point(446, 282));

        //< inta1
        lines[9].addPoint(new Point(477, 278));
        lines[9].addPoint(new Point(484, 282));
        lines[9].addPoint(new Point(477, 286));

        //inta2
        lines[10].addPoint(new Point(484, 294));
        lines[10].addPoint(new Point(446, 294));

        //< inta2
        lines[11].addPoint(new Point(477, 290));
        lines[11].addPoint(new Point(484, 294));
        lines[11].addPoint(new Point(477, 298));

        //inta3
        lines[12].addPoint(new Point(484, 305));
        lines[12].addPoint(new Point(446, 305));

        //< inta3
        lines[13].addPoint(new Point(477, 301));
        lines[13].addPoint(new Point(484, 305));
        lines[13].addPoint(new Point(477, 309));

        //inm
        lines[14].addPoint(new Point(484, 321));
        lines[14].addPoint(new Point(446, 321));

        //< inm
        lines[15].addPoint(new Point(453, 317));
        lines[15].addPoint(new Point(446, 321));
        lines[15].addPoint(new Point(453, 325));

        //RDBUS1
        lines[16].addPoint(new Point(570, 79));
        lines[16].addPoint(new Point(570, 162));

        //RDBUS2
        lines[17].addPoint(new Point(570, 162));
        lines[17].addPoint(new Point(570, 218));

        //RDBUS from CPU
        lines[18].addPoint(new Point(570, 162));
        lines[18].addPoint(new Point(446, 162));

        //< RDBUS
        lines[19].addPoint(new Point(561, 158));
        lines[19].addPoint(new Point(570, 162));
        lines[19].addPoint(new Point(561, 166));

        //WRBUS1
        lines[20].addPoint(new Point(588, 79));
        lines[20].addPoint(new Point(588, 144));

        //WRBUS2
        lines[21].addPoint(new Point(588, 144));
        lines[21].addPoint(new Point(588, 218));

        //WRBUS from CPU
        lines[22].addPoint(new Point(588, 144));
        lines[22].addPoint(new Point(446, 144));

        //< WRBUS
        lines[23].addPoint(new Point(580, 140));
        lines[23].addPoint(new Point(588, 144));
        lines[23].addPoint(new Point(580, 148));

    }

    private void initPictureComponents() {
        buff1 = new TripleStateBuffer();
        buff2 = new TripleStateBuffer();

        dot1 = new Junction(3);
        dot2 = new Junction(3);
        dot3 = new Junction(1);
        dot4 = new Junction(1);
        dot5 = new Junction(1);
        dot6 = new Junction(1);
        dot7 = new Junction(1);
        dot8 = new Junction(1);
        dot9 = new Junction(1);
    }

    private void connectComponents() {
        dot1.setLine(lines[16], 0);
        dot1.setLine(lines[17], 1);
        dot1.setLine(lines[19], 2);
        lines[18].setNextComp(dot1);

        dot2.setLine(lines[20], 0);
        dot2.setLine(lines[21], 1);
        dot2.setLine(lines[23], 2);
        lines[22].setNextComp(dot2);

        lines[2].setNextComp(dot3);
        dot3.setLine(lines[3], 0);
        lines[4].setNextComp(dot4);
        dot4.setLine(lines[5], 0);
        lines[6].setNextComp(dot5);
        dot5.setLine(lines[7], 0);
        lines[8].setNextComp(dot6);
        dot6.setLine(lines[9], 0);
        lines[10].setNextComp(dot7);
        dot7.setLine(lines[11], 0);
        lines[12].setNextComp(dot8);
        dot8.setLine(lines[13], 0);
        lines[14].setNextComp(dot9);
        dot9.setLine(lines[15], 0);

        //sd buffer
        buff1.setLine(dbus, 0);
        sbus.addNextComponent(buff1, 0);

        //ds buffer
        buff2.setLine(sbus, 0);
        dbus.addNextComponent(buff2, 0);

        lines[0].setNextComp(buff1);
        lines[0].setNextCompPort(1);

        lines[1].setNextComp(buff2);
        lines[1].setNextCompPort(1);

    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        for (int i = 0; i < lines.length; i++) {
            lines[i].paint(g);
        }
        systemDBUS.paint(g);
        systemABUS.paint(g);
        dbus.paint(g);
        sbus.paint(g);
    }

    public void refreshSequential() {
    }

    public void clock() {
    }

    public void clear() {
    }

}
