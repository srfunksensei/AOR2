/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainWindow.java
 *
 * Created on 14.09.2010., 17.32.18
 */
package rs.etf.aor.gui;

import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author MB
 */
public class MainWindow extends javax.swing.JFrame {

    static byte[] memory, code, memoryCopy;
    private RegisterDialog regDialog;
    private MemoryDialog memDialog;
    private int tclk = 0;

    /** Creates new form MainWindow */
    public MainWindow() {
        memory = new byte[0x10000];
        memoryCopy = new byte[0x10000];
        System.arraycopy(memory, 0, memoryCopy, 0, memory.length);
        initComponents();
        setTitle("AOR simulator");
        controls1.setParent(this);
        mainPanel.setParent(this);
        refreshTextArea();
    }

    public MainPanel getMainPanel() {
        return mainPanel;
    }

    public Controls getControls1() {
        return controls1;
    }

    public RegisterDialog getRegDialog() {
        return regDialog;
    }

    public MemoryDialog getMemDialog() {
        return memDialog;
    }

    public byte[] getMemory() {
        return memory;
    }

    public void loadProgram(byte[] code) {
        System.arraycopy(code, 0, memory, CPU_blok_registri_cetvri.startPCValue, code.length);
        MainWindow.code = code.clone();
        clear();
    }

    public void clear() {
        System.arraycopy(memoryCopy, 0, memory, 0, memory.length);
        if (code != null) {
            System.arraycopy(code, 0, memory, CPU_blok_registri_cetvri.startPCValue, code.length);
        }
        tclk = 0;
        controls1.getjLabel4().setText("0x" + Integer.toHexString(tclk));
        if (((MainPanel) mainPanel).getT() != 0) {
            ((MainPanel) mainPanel).clear();
            controls1.getPcLabel().setText(((MainPanel) mainPanel).getPC());
            controls1.gettLabel().setText("0x" + Integer.toHexString(((MainPanel) mainPanel).getT()));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new rs.etf.aor.gui.MainPanel();
        controls1 = new rs.etf.aor.gui.Controls();
        mainMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        loadMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        upMenuItem = new javax.swing.JMenuItem();
        clearMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        clkMenuItem = new javax.swing.JMenuItem();
        insMenuItem = new javax.swing.JMenuItem();
        prgMenuItem = new javax.swing.JMenuItem();
        utilityMenu = new javax.swing.JMenu();
        memMenuItem = new javax.swing.JMenuItem();
        regMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register Dialog");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(100, 100, 800, 600));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("AOR simulator"); // NOI18N
        setResizable(false);

        fileMenu.setText("File");

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemClicked(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        mainMenuBar.add(fileMenu);

        editMenu.setText("Step");

        loadMenuItem.setText("Load");
        loadMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMenuItemClicked(evt);
            }
        });
        editMenu.add(loadMenuItem);
        editMenu.add(jSeparator1);

        upMenuItem.setText("Up");
        upMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upMenuItemClicked(evt);
            }
        });
        editMenu.add(upMenuItem);

        clearMenuItem.setText("Clear");
        clearMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMenuItemClicked(evt);
            }
        });
        editMenu.add(clearMenuItem);
        editMenu.add(jSeparator2);

        clkMenuItem.setText("CLK+");
        clkMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clkMenuItemClicked(evt);
            }
        });
        editMenu.add(clkMenuItem);

        insMenuItem.setText("INS+");
        insMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insMenuItemClicked(evt);
            }
        });
        editMenu.add(insMenuItem);

        prgMenuItem.setText("PRG+");
        prgMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prgMenuItemClicked(evt);
            }
        });
        editMenu.add(prgMenuItem);

        mainMenuBar.add(editMenu);

        utilityMenu.setText("Utility");

        memMenuItem.setText("Mem");
        memMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memMenuItemClicked(evt);
            }
        });
        utilityMenu.add(memMenuItem);

        regMenuItem.setText("Reg");
        regMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regMenuItemClicked(evt);
            }
        });
        utilityMenu.add(regMenuItem);

        mainMenuBar.add(utilityMenu);

        helpMenu.setText("Help");

        helpMenuItem.setText("Help");
        helpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuItemClicked(evt);
            }
        });
        helpMenu.add(helpMenuItem);
        helpMenu.add(jSeparator3);

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemClicked(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        mainMenuBar.add(helpMenu);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(controls1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(controls1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemClicked
        dispose();
    }//GEN-LAST:event_exitMenuItemClicked

    private void loadMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMenuItemClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setMultiSelectionEnabled(false);
        int ret = chooser.showDialog(this, "Choose file...");

        if (ret == JFileChooser.CANCEL_OPTION) {
            return;
        }

        File choosedFile = chooser.getSelectedFile();
        code = rs.etf.aor.asm.Assembler.assemble(choosedFile);

        loadProgram(code);
    }//GEN-LAST:event_loadMenuItemClicked

    private void upMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upMenuItemClicked
        up();
    }//GEN-LAST:event_upMenuItemClicked

    private void clearMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMenuItemClicked
        clear();
    }//GEN-LAST:event_clearMenuItemClicked

    private void clkMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clkMenuItemClicked
        clk();
    }//GEN-LAST:event_clkMenuItemClicked

    private void insMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insMenuItemClicked
        inst();
    }//GEN-LAST:event_insMenuItemClicked

    private void prgMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prgMenuItemClicked
        prg();
    }//GEN-LAST:event_prgMenuItemClicked

    private void memMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memMenuItemClicked
        MemoryDialog dialog = getMemDialog();
        if (dialog == null) {
            dialog = new MemoryDialog(null, true, getMemory());
        } else {
            dialog.refreshMemory(getMemory());
        }
        dialog.setVisible(true);
    }//GEN-LAST:event_memMenuItemClicked

    private void regMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regMenuItemClicked
        if (regDialog == null) {
            regDialog = new RegisterDialog(this, getMainPanel().getPC(),
                    getMainPanel().getA(),
                    getMainPanel().getB(),
                    getMainPanel().getIR1(),
                    getMainPanel().getIR2(),
                    getMainPanel().getIR3(),
                    getMainPanel().getIR4(),
                    getMainPanel().getMAR(),
                    getMainPanel().getMBR(),
                    getMainPanel().getRegX(),
                    getMainPanel().getRegY(),
                    getMainPanel().getIVTP(),
                    getMainPanel().getBR(),
                    getMainPanel().getAX(),
                    getMainPanel().getBX(),
                    getMainPanel().getCX(),
                    getMainPanel().getDX(),
                    getMainPanel().getSI(),
                    getMainPanel().getDI(),
                    getMainPanel().getSP(),
                    getMainPanel().getBP(),
                    getMainPanel().getSBUS(),
                    getMainPanel().getDBUS(),
                    getMainPanel().getSystemABUS(),
                    getMainPanel().getSystemDBUS(),
                    getMainPanel().getPSW());
        } else {
            regDialog.refreshValues(getMainPanel().getPC(),
                    getMainPanel().getA(),
                    getMainPanel().getB(),
                    getMainPanel().getIR1(),
                    getMainPanel().getIR2(),
                    getMainPanel().getIR3(),
                    getMainPanel().getIR4(),
                    getMainPanel().getMAR(),
                    getMainPanel().getMBR(),
                    getMainPanel().getRegX(),
                    getMainPanel().getRegY(),
                    getMainPanel().getIVTP(),
                    getMainPanel().getBR(),
                    getMainPanel().getAX(),
                    getMainPanel().getBX(),
                    getMainPanel().getCX(),
                    getMainPanel().getDX(),
                    getMainPanel().getSI(),
                    getMainPanel().getDI(),
                    getMainPanel().getSP(),
                    getMainPanel().getBP(),
                    getMainPanel().getSBUS(),
                    getMainPanel().getDBUS(),
                    getMainPanel().getSystemABUS(),
                    getMainPanel().getSystemDBUS(),
                    getMainPanel().getPSW());
        }

        regDialog.setVisible(true);
    }//GEN-LAST:event_regMenuItemClicked

    private void helpMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuItemClicked
        HelpDialog helpDialog = new HelpDialog(null, true);
        helpDialog.setVisible(true);
    }//GEN-LAST:event_helpMenuItemClicked

    private void aboutMenuItemClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemClicked
        AboutDialog about = new AboutDialog(null, true);
        about.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem clearMenuItem;
    private javax.swing.JMenuItem clkMenuItem;
    private rs.etf.aor.gui.Controls controls1;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JMenuItem insMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenuBar mainMenuBar;
    private rs.etf.aor.gui.MainPanel mainPanel;
    private javax.swing.JMenuItem memMenuItem;
    private javax.swing.JMenuItem prgMenuItem;
    private javax.swing.JMenuItem regMenuItem;
    private javax.swing.JMenuItem upMenuItem;
    private javax.swing.JMenu utilityMenu;
    // End of variables declaration//GEN-END:variables

    public void up() {
        mainPanel.up();
    }

    public void refreshPC() {
        controls1.getPcLabel().setText(((MainPanel) mainPanel).getPC());
    }

    public void clk() {
        mainPanel.clk();
        controls1.gettLabel().setText("0x" + Integer.toHexString(((MainPanel) mainPanel).getT()));
        tclk++;
        controls1.getjLabel4().setText("0x" + Integer.toHexString(tclk));
        controls1.getPcLabel().setText(((MainPanel) mainPanel).getPC());
        refreshTextArea();
        repaint();
    }

    public void inst() {
        clk();
        while (((MainPanel) mainPanel).getT() != 0 && !((MainPanel) mainPanel).getHalt()) {
            clk();
        }
    }

    public void prg() {
        while (!((MainPanel) mainPanel).getHalt()) {
            inst();
        }
    }

    private String getTextAreaString() {
        return "Current panel: " + ((MainPanel) mainPanel).getCurrent() + "\n" +
                getOperation() + "\n" + getWayOfAddressing();
    }

    private String getOperation() {
        if (((MainPanel)mainPanel).getT() < 0x19) {
            return "Instruction: ";
        }
        return "Instruction: " + ((MainPanel) mainPanel).getOperation();
    }

    private String getWayOfAddressing() {
        String operation = ((MainPanel) mainPanel).getOperation();
        if (((MainPanel)mainPanel).getT() < 0x19 || operation.equals("BNZ") || operation.equals("JSR") || operation.equals("JMP") ||
                operation.equals("RTI") || operation.equals("RTS") || operation.equals("INT") || operation.equals("INTE") ||
                operation.equals("INTD") || operation.equals("TRPE") || operation.equals("TRPD") || operation.equals("Bad op code")) {
            return "Way of addresing: ";
        }
        return "Way of addresing: " + ((MainPanel) mainPanel).getWayOfAddressing();
    }

    public void refreshTextArea() {
        controls1.getTextArea().setText(getTextAreaString());
    }

}
